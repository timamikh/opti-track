{
  "version": 3,
  "sources": ["../../src/config/auth.ts", "../../src/config/server.ts", "../../src/config/database.ts", "../keystone.ts", "../schema.ts", "../auth.ts"],
  "sourcesContent": ["// Authentication configuration settings\r\n\r\n// Session configuration\r\nexport const sessionConfig = {\r\n  // Session secret - in production should be set via environment variable\r\n  secret: process.env.SESSION_SECRET || 'a-very-secure-secret-for-keystone-cms',\r\n  // Session duration (30 days in seconds)\r\n  maxAge: 60 * 60 * 24 * 30\r\n};\r\n\r\n// Authentication configuration\r\nexport const authConfig = {\r\n  // KeystoneJS authentication settings\r\n  keystone: {\r\n    listKey: 'User',\r\n    identityField: 'email',\r\n    secretField: 'password',\r\n    initFirstItem: {\r\n      fields: ['name', 'email', 'password', 'role']\r\n    }\r\n  },\r\n  session: sessionConfig\r\n};\r\n\r\nexport default authConfig; ", "// Server configuration settings\r\n\r\n// Development server configuration\r\nconst development = {\r\n  // React application server\r\n  reactApp: {\r\n    port: 8000,\r\n    strictPort: true,\r\n    host: true,\r\n    open: true\r\n  },\r\n  // KeystoneJS CMS server\r\n  keystoneCms: {\r\n    port: 3000,\r\n    cors: {\r\n      origin: true,\r\n      credentials: true\r\n    }\r\n  }\r\n};\r\n\r\n// Production server configuration\r\nconst production = {\r\n  // React application server (served by Nginx)\r\n  reactApp: {\r\n    port: 80\r\n  },\r\n  // KeystoneJS CMS server\r\n  keystoneCms: {\r\n    port: 3000,\r\n    cors: {\r\n      origin: true,\r\n      credentials: true\r\n    }\r\n  }\r\n};\r\n\r\n// Export configuration based on environment\r\nexport const serverConfig = process.env.NODE_ENV === 'production' \r\n  ? production \r\n  : development;\r\n\r\nexport default serverConfig; ", "// Database configuration settings\r\n\r\n// KeystoneJS database configuration\r\nexport const keystoneDbConfig = {\r\n  development: {\r\n    provider: 'sqlite',\r\n    url: 'file:./keystone.db',\r\n  },\r\n  production: {\r\n    provider: 'sqlite',\r\n    url: 'file:./keystone.db',\r\n    // In a real production environment, you might want to use a different database\r\n    // provider: 'postgresql',\r\n    // url: process.env.DATABASE_URL || 'postgresql://user:password@localhost:5432/opti-track',\r\n  }\r\n};\r\n\r\n// Export configuration based on environment\r\nexport const databaseConfig = {\r\n  keystone: process.env.NODE_ENV === 'production'\r\n    ? keystoneDbConfig.production\r\n    : keystoneDbConfig.development\r\n};\r\n\r\nexport default databaseConfig; ", "import { config } from '@keystone-6/core';\r\nimport { lists } from './schema';\r\nimport { withAuth, session } from './auth';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\n// Load server configuration from the src/config directory\r\nlet serverConfig;\r\nconst serverConfigPath = path.resolve(__dirname, '../src/config/server.ts');\r\n\r\n// Check if the config file exists\r\nif (fs.existsSync(serverConfigPath)) {\r\n  try {\r\n    // Use dynamic import for ESM compatibility\r\n    import('../src/config/server.js').then(module => {\r\n      serverConfig = module.default;\r\n    }).catch(err => {\r\n      console.warn('Failed to import server config, using defaults:', err);\r\n      // Fallback to default config\r\n      serverConfig = {\r\n        keystoneCms: {\r\n          port: 3000,\r\n          cors: { \r\n            origin: true, \r\n            credentials: true \r\n          }\r\n        }\r\n      };\r\n    });\r\n  } catch (err) {\r\n    console.warn('Failed to load server config, using defaults:', err);\r\n  }\r\n} else {\r\n  console.warn('Server config file not found, using defaults');\r\n}\r\n\r\n// Load database configuration\r\nlet dbConfig;\r\nconst dbConfigPath = path.resolve(__dirname, '../src/config/database.ts');\r\n\r\n// Check if the config file exists\r\nif (fs.existsSync(dbConfigPath)) {\r\n  try {\r\n    // Use dynamic import for ESM compatibility\r\n    import('../src/config/database.js').then(module => {\r\n      dbConfig = module.default.keystone;\r\n    }).catch(err => {\r\n      console.warn('Failed to import database config, using defaults:', err);\r\n      // Fallback to default config\r\n      dbConfig = {\r\n        provider: 'sqlite',\r\n        url: 'file:./keystone.db',\r\n      };\r\n    });\r\n  } catch (err) {\r\n    console.warn('Failed to load database config, using defaults:', err);\r\n  }\r\n} else {\r\n  console.warn('Database config file not found, using defaults');\r\n}\r\n\r\n// Fallback to default config if loading fails\r\nif (!serverConfig) {\r\n  serverConfig = {\r\n    keystoneCms: {\r\n      port: 3000,\r\n      cors: { \r\n        origin: true, \r\n        credentials: true \r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nif (!dbConfig) {\r\n  dbConfig = {\r\n    provider: 'sqlite',\r\n    url: 'file:./keystone.db',\r\n  };\r\n}\r\n\r\nexport default withAuth(\r\n  config({\r\n    db: dbConfig,\r\n    lists,\r\n    session,\r\n    ui: {\r\n      isAccessAllowed: (context) => !!context.session?.data,\r\n    },\r\n    server: {\r\n      port: serverConfig.keystoneCms.port,\r\n      cors: serverConfig.keystoneCms.cors\r\n    },\r\n  })\r\n); ", "import { list } from '@keystone-6/core';\r\nimport { allowAll } from '@keystone-6/core/access';\r\nimport {\r\n  text,\r\n  relationship,\r\n  password,\r\n  timestamp,\r\n  select,\r\n} from '@keystone-6/core/fields';\r\nimport { document } from '@keystone-6/fields-document';\r\n\r\nexport const lists = {\r\n  User: list({\r\n    access: allowAll,\r\n    fields: {\r\n      name: text({ validation: { isRequired: true } }),\r\n      email: text({\r\n        validation: { isRequired: true },\r\n        isIndexed: 'unique',\r\n      }),\r\n      password: password({ validation: { isRequired: true } }),\r\n      posts: relationship({ ref: 'Post.author', many: true }),\r\n      role: select({\r\n        type: 'enum',\r\n        options: [\r\n          { label: 'Admin', value: 'admin' },\r\n          { label: 'Editor', value: 'editor' },\r\n          { label: 'SMM Specialist', value: 'smm' },\r\n        ],\r\n        defaultValue: 'smm',\r\n      }),\r\n    },\r\n  }),\r\n  Post: list({\r\n    access: allowAll,\r\n    fields: {\r\n      title: text({ validation: { isRequired: true } }),\r\n      slug: text({\r\n        validation: { isRequired: true },\r\n        isIndexed: 'unique',\r\n      }),\r\n      status: select({\r\n        options: [\r\n          { label: 'Published', value: 'published' },\r\n          { label: 'Draft', value: 'draft' },\r\n        ],\r\n        defaultValue: 'draft',\r\n        validation: { isRequired: true },\r\n      }),\r\n      content: document({\r\n        formatting: true,\r\n        links: true,\r\n        dividers: true,\r\n        layouts: [\r\n          [1, 1],\r\n          [1, 1, 1],\r\n        ],\r\n      }),\r\n      publishDate: timestamp(),\r\n      author: relationship({\r\n        ref: 'User.posts',\r\n        many: false,\r\n      }),\r\n      category: relationship({\r\n        ref: 'Category.posts',\r\n        many: false,\r\n      }),\r\n      tags: relationship({\r\n        ref: 'Tag.posts',\r\n        many: true,\r\n      }),\r\n      imageUrl: text({\r\n        label: 'Image URL',\r\n        ui: {\r\n          description: 'URL of the image for this post',\r\n        }\r\n      }),\r\n    },\r\n  }),\r\n  Category: list({\r\n    access: allowAll,\r\n    fields: {\r\n      name: text({ validation: { isRequired: true } }),\r\n      slug: text({\r\n        validation: { isRequired: true },\r\n        isIndexed: 'unique',\r\n      }),\r\n      description: text(),\r\n      posts: relationship({ ref: 'Post.category', many: true }),\r\n    },\r\n  }),\r\n  Tag: list({\r\n    access: allowAll,\r\n    fields: {\r\n      name: text({ validation: { isRequired: true } }),\r\n      slug: text({\r\n        validation: { isRequired: true },\r\n        isIndexed: 'unique',\r\n      }),\r\n      posts: relationship({ ref: 'Post.tags', many: true }),\r\n    },\r\n  }),\r\n}; ", "import { createAuth } from '@keystone-6/auth';\r\nimport { statelessSessions } from '@keystone-6/core/session';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\n// Load configuration from the src/config directory\r\n// We need to use require here because this file is used during Keystone initialization\r\n// before the TypeScript compilation\r\nlet authConfig;\r\nconst configPath = path.resolve(__dirname, '../src/config/auth.ts');\r\n\r\n// Check if the config file exists\r\nif (fs.existsSync(configPath)) {\r\n  try {\r\n    // Use dynamic import for ESM compatibility\r\n    import('../src/config/auth.js').then(module => {\r\n      authConfig = module.default;\r\n    }).catch(err => {\r\n      console.warn('Failed to import auth config, using defaults:', err);\r\n      // Fallback to default config\r\n      authConfig = {\r\n        keystone: {\r\n          listKey: 'User',\r\n          identityField: 'email',\r\n          secretField: 'password',\r\n          initFirstItem: {\r\n            fields: ['name', 'email', 'password', 'role'],\r\n          },\r\n        },\r\n        session: {\r\n          secret: process.env.SESSION_SECRET || 'a-very-secure-secret-for-keystone-cms',\r\n          maxAge: 60 * 60 * 24 * 30, // 30 days\r\n        }\r\n      };\r\n    });\r\n  } catch (err) {\r\n    console.warn('Failed to load auth config, using defaults:', err);\r\n  }\r\n} else {\r\n  console.warn('Auth config file not found, using defaults');\r\n}\r\n\r\n// Fallback to default config if loading fails\r\nif (!authConfig) {\r\n  authConfig = {\r\n    keystone: {\r\n      listKey: 'User',\r\n      identityField: 'email',\r\n      secretField: 'password',\r\n      initFirstItem: {\r\n        fields: ['name', 'email', 'password', 'role'],\r\n      },\r\n    },\r\n    session: {\r\n      secret: process.env.SESSION_SECRET || 'a-very-secure-secret-for-keystone-cms',\r\n      maxAge: 60 * 60 * 24 * 30, // 30 days\r\n    }\r\n  };\r\n}\r\n\r\n// Create auth with config\r\nconst { withAuth } = createAuth({\r\n  listKey: authConfig.keystone.listKey,\r\n  identityField: authConfig.keystone.identityField,\r\n  secretField: authConfig.keystone.secretField,\r\n  initFirstItem: authConfig.keystone.initFirstItem,\r\n});\r\n\r\n// Create session with config\r\nconst session = statelessSessions({\r\n  secret: authConfig.session.secret,\r\n  maxAge: authConfig.session.maxAge,\r\n});\r\n\r\nexport { withAuth, session }; "],
  "mappings": "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",
  "names": ["import_core", "authConfig", "path", "fs", "module", "import_path", "import_fs", "serverConfig", "path", "fs", "module"]
}
